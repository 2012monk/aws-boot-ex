pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID= credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY= credentials('AWS_SECRET_ACCESS_KEY')
        AWS_DEFAULT_REGION='ap-northeast-2'
        AWS_OUTPUT = 'json'
        HOME='.'
    }

    stages {
        stage('Prepare') {
            agent any

            steps {
                echo AWS_ACCESS_KEY_ID
                echo AWS_SECRET_ACCESS_KEY
                echo AWS_DEFAULT_REGION
                echo "cloning git repo..."

                git url: 'https://github.com/2012monk/aws-boot-ex.git',
                    branch: 'master',
                    credentialsId: '2012monk'
            }

            post {

                success {
                    echo 'prepare success'
                }

                always {
                    echo 'done prepare'
                }

                cleanup {
                    echo 'after all other post conditions'
                }
            }
        }

        stage('Initialize') {
            steps {
                sh 'cat ./gradle/wrapper/gradle-wrapper.properties'
                sh 'export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}'
                sh 'AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}'
                sh 'export AWS_ACCESS_KEY_ID=${AWS_SECRET_ACCESS_KEY}'
                sh 'AWS_ACCESS_KEY_ID=${AWS_SECRET_ACCESS_KEY}'
                sh 'export AWS_DEFAULT_REGION=ap-northeast-2'
                sh 'export AWS_OUTPUT=json'
                echo '$AWS_SECRET_ACCESS_KEY'
            }
        }

        stage('build gradle') {
            steps {
                sh './gradlew build --exclude-task test'
                sh 'cd build'
                sh 'ls -al ./build'
            }
            post {
                success {
                    echo 'gradle build success'
                }

                failure {
                    echo 'gradle build failed'
                }
            }
        }


        stage('Dockerizing') {
            agent any
            steps {
                echo 'dockerizing start...'
                sh 'pwd'
                sh 'export'
                echo '${AWS_SECRET_ACCESS_KEY}'
                sh 'docker-compose up --build -d'
                echo 'docker ps '
            }

            post {
                success {
                    echo 'deploy success'
                }

                failure {
                    echo 'deploy failed'
                }
            }
        }
    }
} 